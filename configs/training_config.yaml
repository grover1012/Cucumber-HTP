# YOLOv8 Training Configuration for Cucumber Trait Extraction
# Based on Ultralytics YOLOv8 configuration

# Model Configuration
model:
  architecture: "yolo12n-seg.pt"  # YOLO12 nano with segmentation
  # Options: yolo12n-seg.pt, yolo12s-seg.pt, yolo12m-seg.pt, yolo12l-seg.pt, yolo12x-seg.pt
  pretrained: true
  freeze_backbone: false

# Dataset Configuration
dataset:
  path: "data"
  train: "annotations/train.txt"
  val: "annotations/val.txt"
  test: "annotations/test.txt"
  nc: 4  # Number of classes
  names: ["cucumber", "ruler", "label", "color_chart"]
  
# Training Parameters
training:
  epochs: 100
  batch_size: 16
  imgsz: 640  # Input image size
  device: "auto"  # cuda device, i.e. 0 or 0,1,2,3 or cpu
  
# Optimization
optimizer:
  name: "AdamW"
  lr0: 0.001  # Initial learning rate
  lrf: 0.01   # Final learning rate (lr0 * lrf)
  momentum: 0.937
  weight_decay: 0.0005
  warmup_epochs: 3.0
  warmup_momentum: 0.8
  warmup_bias_lr: 0.1
  
# Data Augmentation
augmentation:
  hsv_h: 0.015  # HSV-Hue augmentation (fraction)
  hsv_s: 0.7    # HSV-Saturation augmentation (fraction)
  hsv_v: 0.4    # HSV-Value augmentation (fraction)
  degrees: 0.0   # Image rotation (+/- deg)
  translate: 0.1 # Image translation (+/- fraction)
  scale: 0.5    # Image scale (+/- gain)
  shear: 0.0    # Image shear (+/- deg)
  perspective: 0.0  # Image perspective (+/- fraction), range 0-0.001
  flipud: 0.0   # Image flip up-down (probability)
  fliplr: 0.5   # Image flip left-right (probability)
  mosaic: 1.0   # Image mosaic (probability)
  mixup: 0.0    # Image mixup (probability)
  copy_paste: 0.0  # Segment copy-paste (probability)
  
# Loss Configuration
loss:
  box: 7.5      # Box loss gain
  cls: 0.5      # Class loss gain
  dfl: 1.5      # DFL loss gain
  pose: 12.0    # Pose loss gain
  kobj: 2.0     # Keypoint obj loss gain
  label_smoothing: 0.0  # Label smoothing epsilon
  
# Validation
validation:
  save_period: 10  # Save checkpoint every x epochs
  plots: true      # Save plots for train/val
  save_json: false # Save a COCO-JSON results file
  
# Save Configuration
save:
  save_period: -1  # Save checkpoint every x epochs (disabled if < 1)
  project: "cucumber_traits"
  name: "exp"
  exist_ok: false  # Existing project/name ok, do not increment
  pretrained: false
  optimizer: true
  save_hybrid: false
  verbose: false
  save_images: false
  save_labels: false
  save_crop: false
  save_txt: false
  save_conf: false
  save_json: false
  
# Logging
logging:
  verbose: true
  plots: true
  save_hybrid: false
  save_images: false
  save_labels: false
  save_crop: false
  save_txt: false
  save_conf: false
  save_json: false
